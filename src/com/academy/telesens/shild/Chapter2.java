package com.academy.telesens.shild;

import java.lang.constant.DynamicCallSiteDesc;

public class Chapter2 {

    public static  void main(String[] args) {
        // Расчет числа кубических дюймов в кубе объемом в 1 куб. милю

        long ci;
        long im;

        im = 5280 * 12; // Дюйм -РОВНО 1/12 фута. П1 миля сухопутная = 5 280 футам
        ci = im * im * im;

        System.out.println("B одной кубической миле содержится " + ci +
                " кубических дюймов");

        //B одной кубической миле содержится 254358061056000 кубических дюймов

        System.out.println("*****************");

        //Определение длины гипотенузы, исходя из длины катетов,
        //      по теореме Пифагора

        double x, y, z;
        x = 3;
        y = 4;
        z = Math.sqrt(x * x + y * y);//Обратите внимание но вызов метода sqrt () .
        // Перед именем метода указывается имя кпасса, чnеном которого он явnяется
        // так жке println ()  указывается имена классов System. out.

        System.out.println("Длинa гипотенузы:" + z);
        //Длинa гипотенузы:5.0
        System.out.println("*****************");
        //Демонстрация использования логических значений


        boolean b;

        b = false;
        System.out.println("значение b:" + b);
        b = true;
        System.out.println("значение b:" + b);

        //Логическое значение можно использовать для
        //управления условным оператором if
        if (b) System.out.println("Этa инструкция выполняется");

        b = false;
        if (b) System.out.println("Этa инструкция не выполняется");//if(b == true)
        //В результате выполнения сравнения
        //получается логическое значение
        System.out.println("Результат сравнения 10>9  " + (10 > 9));//операция + имеет более высокий приоритет
//        Значение Ь: false
//        Значение Ь: true
//        Эта инструкция выполняется
//        Результат сравнения 10 > 9: true
        System.out.println("*****************");

        //Упражнение 2.1

        // Рассчитать расстояние до места вспЬП11ки молнии, звук от которого
        // доходит до наблюдателя через 7,2 секунды.

        double dist;
        dist = 1100 * 7.2;
        System.out.println("Paccтoяниe до места вспьпnки молнии " +
                "составляет " + dist + " футов");

        double dist1 = dist / 2;
        System.out.println("Paccтoяниe до скалы " + "определенная по эху" +
                " составляет " + dist1 + " футов");
        //  Paccтoяниe до места вспьпnки молнии составляет 7920.0 футов
        // Paccтoяниe до скалы определенная по эхусоставляет 3960.0 футов

        System.out.println("*****************");

        //Демонстрация управляющих последовательностей в символьных строках

        System.out.println("Первая строка\nВторая строка");//Исnол•зуйте
        // последовотел•ность \n дnя встовки символа перевода строки
        System.out.println("A\tB\tC");//Испол•зуйте табуляцию
        System.out.println("D\tE\tF");//дnя выравииваиия вывода

        /*Первая строка
        Вторая строка
        А    В    С
        D    Е    F */
        System.out.println("*****************");

        // Демонстрация динамической инициализации
        double radius = 4, height = 5;

        // Переменная volume инициализируется динамически
        //во время выполнения программы
        double volume = 3.1416 * radius * radius * height;
        System.out.println("Обьем цилиндра:  " + volume);
        // Обьем цилиндра:  251.328
        System.out.println("*****************");

        // Демонстрация области действия блока кода

        int a;// Демонстрация области действия блока кода
        a = 10;
        if (a == 10) {// Начало новой области действия
            int c = 20;//Эта переменная доступна только в данном блоке
            // Обе переменные, "a" и "c", доступны в данном кодовом блоке
            System.out.println("a and c:" + a + " " + c);
            a = c * 2;
        }

        // c = 100; // Ошибка! В этом месте переменная "c" недоступна..,.,.

        // А переменная "a" по-прежнему доступна
        System.out.println("a is " + a);

        System.out.println("*****************");

        //Демонстрация времени жизни переменной
        int g;
        for (g = 0; g < 3; g ++) {
            int q = -1;//переменная у инициализируется при каждом входе в блок
            System.out.println("q :" +q);//всегда выводится значение -1
            q = 100;
            System.out.println("Измeнeннoe значение q:" +q );

//            q :-1
//            Измeнeннoe значение q:100
//            q :-1
//            Измeнeннoe значение q:100
//            q :-1
//            Измeнeннoe значение q:100
//            q :-1
//            Измeнeннoe значение q:100
//            q :-1
//            Измeнeннoe значение q:100
//            q :-1
//            Измeнeннoe значение q:100
            System.out.println("*****************");

// Приведение типов для правильного вычисления выражения
            int h;

            for(h = 0; h < 5; h++){
                System.out.println(h+ "/ 3: " + h / 3);
                System.out.println(h+ "/ 3 с дробной частью: " + (double) h / 3);
                System.out.println();

//                0/ 3: 0
//                0/ 3 с дробной частью: 0.0
//
//                1/ 3: 0
//                1/ 3 с дробной частью: 0.3333333333333333
//
//                2/ 3: 0
//                2/ 3 с дробной частью: 0.6666666666666666
//
//                3/ 3: 1
//                3/ 3 с дробной частью: 1.0
//
//                4/ 3: 1
//                4/ 3 с дробной частью: 1.3333333333333333
                System.out.println("*****************");





            }

        }

    }

}
